"""
QUESTION COPYRIGHT (C) LEETCODE
The Fibonacci numbers, commonly denoted
 F(n) form a sequence, called the 
Fibonacci sequence, such that each number
 is the sum of the two preceding ones,
 starting from 0 and 1. That is,
 
F(0) = 0,   F(1) = 1
F(N) = F(N - 1) + F(N - 2), for N > 1.
 
Given N, calculate F(N).
 
  
 
Example 1:
 
Input: 2
Output: 1
Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.
 
Example 2:
 
Input: 3
Output: 2
Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.
 
Example 3:
 
Input: 4
Output: 3
Explanation: F(4) = F(3) + F(2) = 2 + 1 = 3.
 
  
 
Note:
 
0 ≤ N ≤ 30
"""
This is Dynamic Programming
 
solution 1
Since the subsequent equations depends on 
the previous 2 terms, F(0) = 0, F[1] = 1, no dp array need to be declared.
 
class Solution:
    def fib(self, N: int) -> int:
        a, b = 0, 1
        for i in range( N):
            a, b = b, a+ b
        return a
solution 2
Using hash table
class Solution:
    def fib(self, N: int) -> int:
        myDict = {}
        myDict[0], myDict[1] = 0,1
        for i in range(2, N+1):
            myDict[i] = myDict[i-1] + myDict[i-2]
        return myDict[N]
         
