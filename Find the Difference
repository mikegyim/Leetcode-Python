"""
QUESTION COPYRIGHT (C) LEETCODE
 
You are given two strings s and t.
 
String t is generated by random 
shuffling string s and then add one
 more letter at a random position.
 
Return the letter that was added to t.
 
  
 
Example 1:
 
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
 
Example 2:
 
Input: s = "", t = "y"
Output: "y"
 
Example 3:
 
Input: s = "a", t = "aa"
Output: "a"
 
Example 4:
 
Input: s = "ae", t = "aea"
Output: "a"
 
  
 
Constraints:
 
    0 <= s.length <= 1000
    t.length == s.length + 1
    s and t consist of lower-case English letters.
"""
RELATED QUESTIONS: single number iii, single number, 
find the duplicate number,
 find the difference, missing number
 
using Bit Manipulation
Time complexity is O(N) and space complexity is O(1)
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        #Since 0^X is X,
        #initialize ans with 0
        ans = 0
        #XOR all characters of of both s and t
        for letter in s:
            ans ^= ord(letter)
        for letter in t:
            ans ^= ord(letter)
        #what is left after XORing everything is 
        #the difference
        return chr(ans)
        
