"""
 
Given a binary array, find the maximum 
number of consecutive 1s in this array.
 
Example 1:
 
Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or
 the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.
 
Note:
 
    The input array will only contain 0 and 1.
    The length of input array is a 
positive integer and will not exceed 10,000
 
solution explanation with the help of leetcode
Approach: one pass
Time  complexity = O(N)
space complexity = O(1)
NB: Note - The max count is only calculated when we encounter a break i.e. 0, since thats where a subarray of 1's ends(idea from leetcode)
"""
 
class Solution:
    def findMaxConsecutiveOnes(self, nums: List[int]) -> int:
        cnt = maxCnt = 0
        for num in nums:
            if num == 1:
                cnt += 1
            else:
                #find max till now
                maxCnt = max(maxCnt, cnt)
                #reset count of 1
                cnt = 0
        return max(maxCnt, cnt)
