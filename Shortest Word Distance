"""
QUESTION COPYRIGHT (C) LEETCODE
Given a list of words and two words 
word1 and word2, return the shortest 
distance between these two words in the list.
 
Example:
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].
 
Input: word1 = “coding”, word2 = “practice”
Output: 3
 
Input: word1 = "makes", word2 = "coding"
Output: 1
 
Note:
You may assume that word1 does not 
equal to word2, and word1 and word2 are both in the list.
 
"""
Using simple one pass solution
Time complexity is O(N) and space complexity is O(1)
 
class Solution:
    def shortestDistance(self, words: List[str], word1: str, word2: str) -> int:
        distance, dx1, dx2 = inf, -inf, -inf
        for dx,word in enumerate(words):
            if word == word1:
                dx1 = dx
                distance = min(distance, dx-dx2)
            elif word == word2:
                dx2 = dx
                distance = min(distance, dx-dx1)
        return distance
                 
