"""
Count the number of prime numbers less 
than a non-negative number, n.
 
  
 
Example 1:
 
Input: n = 10
Output: 4
Explanation: There are 4 prime numbers 
less than 10, they are 2, 3, 5, 7.
 
Example 2:
 
Input: n = 0
Output: 0
 
Example 3:
 
Input: n = 1
Output: 0
 
  
 
Constraints:
 
    0 <= n <= 5 * 106
 
 
"""
 
class Solution:
    def countPrimes(self, n: int) -> int:
        prime = [True]*n # set all the elements to True initially
        # any non negative number less than 2 is not prime
        if n < 2: return 0
        #1 and 0 are not prime
        prime[0]=prime[1]= False
        #therefore, we will start counting from 2 to 
        for p in range(2, n):
            if prime[p] is not False:
                prime[p] = True
                #multiples of primes are not primes
                for i in range(p*p, n, p):
                    prime[i] = False
        return sum(prime)
