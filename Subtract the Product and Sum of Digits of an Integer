#Given an integer number n, 
#return the difference between the product of its digits 
#and the sum of its digits.
 
  
 
Example 1:
 
Input: n = 234
Output: 15 
Explanation: 
Product of digits = 2 * 3 * 4 = 24 
Sum of digits = 2 + 3 + 4 = 9 
Result = 24 - 9 = 15
 
Example 2:
 
Input: n = 4421
Output: 21
Explanation: 
Product of digits = 4 * 4 * 2 * 1 = 32 
Sum of digits = 4 + 4 + 2 + 1 = 11 
Result = 32 - 11 = 21
 
  
 
Constraints:
 
    1 <= n <= 10^5
 
solution1
class Solution:
    def subtractProductAndSum(self, n: int) -> int:
        sum = 0
        product =1
         
        b = list(str(n))
        for num in b:
            product *= int(num)
            sum += int(num)
        return product - sum
             
 
solution 2
class Solution:
    def subtractProductAndSum(self, n: int) -> int:
        val = list(str(n))
        Sum, product = 0, 1
        for num in val:
            product = product * int(num)
            Sum = Sum + int(num)
        return (product - Sum)
         
 
solution 3
class Solution:
    def subtractProductAndSum(self, n: int) -> int:
        val = list(str(n))
        product, Sum, result = 1,0,0
        for num in val:
            product= product * int(num)
            Sum = Sum + int(num)
        result = product-Sum
        return result
