QUESTION COPYRIGTH (C) LEETOCDE
"""
Invert a binary tree.
 
Example:
 
Input:
 
     4
   /   \
  2     7
 / \   / \
1   3 6   9
 
Output:
 
     4
   /   \
  7     2
 / \   / \
9   6 3   1
"""
solution 1
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        if not root:
            return None
        root.left, root.right = self.invertTree(root.right), self.invertTree(root.left)
        return root
 
solution 2
using dfs, recursive approach
Time complexity O(N)
space complexity O(N)
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        def dfs(root):
            if root:
                root.left, root.right = dfs(root.right), dfs(root.left)
            return root
        return dfs(root)
             
