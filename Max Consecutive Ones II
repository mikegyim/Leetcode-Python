"""
QUESTION COPYRIGHT (C) LEETCODE
 
Given a binary array, find the maximum 
number of consecutive 1s in this 
array if you can flip at most one 0.
 
Example 1:
 
Input: [1,0,1,1,0]
Output: 4
Explanation: Flip the first zero will 
get the the maximum number of consecutive 1s.
    After flipping, the maximum number of consecutive 1s is 4.
 
Note:
 
    The input array will only contain 0 and 1.
    The length of input array is a 
positive integer and will not exceed 10,000
 
Follow up:
What if the input numbers come in one
 by one as an infinite stream? 
In other words, you can't store all numbers 
coming from the stream as it's too 
large to hold in memory. Could you solve it efficiently? 
 
solution
two pointer approach
time complexity O(N) 
space complexity 0(1)
   class Solution:
    def findMaxConsecutiveOnes(self, nums: List[int]) -> int:
        current, previous, ans = 0, 0,0
        for num in nums:
            if num == 1:
                current += 1
            else:
                ans  = max(ans, current + previous)
                #adding one to previous (thats the, the above current+=1)
                #for the flipped 0 which is now 1
                previous = current + 1
                #the flipped zero position beome the current
                #which is current = 0
                current = 0
        return max(ans, current + previous)
